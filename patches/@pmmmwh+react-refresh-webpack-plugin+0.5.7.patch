diff --git a/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/index.js b/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/index.js
index 2dc4237..07c68b0 100644
--- a/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/index.js
+++ b/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/index.js
@@ -72,7 +72,7 @@ class ReactRefreshPlugin {
       devServer: compiler.options.devServer,
       options: this.options,
     });
-    if (EntryPlugin) {
+    if (this.options.client !== false && EntryPlugin) {
       // Prepended entries does not care about injection order,
       // so we can utilise EntryPlugin for simpler logic.
       addEntries.prependEntries.forEach((entry) => {
@@ -139,7 +139,7 @@ class ReactRefreshPlugin {
           }
         );
       });
-    } else {
+    } else if (this.options.client !== false) {
       compiler.options.entry = injectRefreshEntry(compiler.options.entry, addEntries);
     }
 
diff --git a/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/options.json b/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/options.json
index 40443b8..9f62c9e 100644
--- a/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/options.json
+++ b/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/options.json
@@ -55,6 +55,7 @@
     }
   },
   "properties": {
+    "client": { "type": "boolean" },
     "esModule": {
       "anyOf": [{ "type": "boolean" }, { "$ref": "#/definitions/ESModuleOptions" }]
     },
diff --git a/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/normalizeOptions.js b/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/normalizeOptions.js
index 8c7bbbb..abf7ff0 100644
--- a/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/normalizeOptions.js
+++ b/node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/utils/normalizeOptions.js
@@ -10,6 +10,7 @@ const normalizeOptions = (options) => {
   d(options, 'include', /\.([cm]js|[jt]sx?|flow)$/i);
   d(options, 'forceEnable');
   d(options, 'library');
+  d(options, 'client', true);
 
   n(options, 'overlay', (overlay) => {
     /** @type {import('../types').NormalizedErrorOverlayOptions} */
diff --git a/node_modules/@pmmmwh/react-refresh-webpack-plugin/types/lib/types.d.ts b/node_modules/@pmmmwh/react-refresh-webpack-plugin/types/lib/types.d.ts
index be0924c..d176ae2 100644
--- a/node_modules/@pmmmwh/react-refresh-webpack-plugin/types/lib/types.d.ts
+++ b/node_modules/@pmmmwh/react-refresh-webpack-plugin/types/lib/types.d.ts
@@ -39,6 +39,10 @@ export type NormalizedErrorOverlayOptions = import('type-fest').SetRequired<
   'entry' | 'module' | 'sockIntegration'
 >;
 export type ReactRefreshPluginOptions = {
+  /**
+   * Inject client modules.
+   */
+  client?: boolean | undefined;
   /**
    * Enables strict ES Modules compatible runtime.
    */
